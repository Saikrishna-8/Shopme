package com.example.demo;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class Controller {
	
	@Autowired
	AlienRepository1 repository1;
	
	AliensRepository repository=new AliensRepository();
	
	@RequestMapping(value="aliens",method=RequestMethod.GET,produces = { MediaType.APPLICATION_XML_VALUE, MediaType.APPLICATION_JSON_VALUE })
	public List<Alien> getAliens()
	{
		return repository.getAliens();
	}
	
	@RequestMapping(value="aliens/{id}",method=RequestMethod.GET,produces= {MediaType.APPLICATION_JSON_VALUE,MediaType.APPLICATION_XML_VALUE})
	public Alien getAlien(@PathVariable int id)
	{
		
		return repository.getAlien(id);
	}
	
	
	@RequestMapping(value="alien",method=RequestMethod.POST,consumes = {MediaType.APPLICATION_JSON_VALUE,MediaType.APPLICATION_XML_VALUE},produces= {MediaType.APPLICATION_JSON_VALUE})
	//@RequestMapping(value="alien",method=RequestMethod.POST,consumes="application/json",produces="application/json")
	public Alien create(@RequestBody Alien a1)
	{
		System.out.println(a1);
		repository.create(a1);
		return a1;
	}
	
	@RequestMapping(value="update",method=RequestMethod.PUT,consumes= {MediaType.APPLICATION_JSON_VALUE,MediaType.APPLICATION_XML_VALUE},produces= {MediaType.APPLICATION_JSON_VALUE})
	public Alien alienUpdate(@RequestBody Alien a1)
	{
		System.out.println(a1);
		for(Alien a:repository.repo)
		{
			if(a.getId()==a1.getId())
			{
				a.setName(a1.getName());
				a.setPoints(a1.getPoints());
				return a;
			}
		}
		repository.create(a1);
		return a1;
	}
	
	@RequestMapping(value="delete/{id}",method=RequestMethod.DELETE)
	//produces= {MediaType.APPLICATION_JSON_VALUE}  ,consumes= {MediaType.APPLICATION_JSON_VALUE,MediaType.APPLICATION_XML_VALUE}
	public String deleteAlien(@PathVariable int id)
	{
		Alien a=repository.getAlien(id);
		if(repository.delete(a))
		{
			System.out.println("Alien Number "+id+" Was deleted");
			return "Alien Number "+id+" Was deleted";
		}
		System.out.println("Alien Number "+id+" id not available in DB");
		return "Alien Number "+id+" id not available in DB";
	}
	
	@RequestMapping(value = "db",method = RequestMethod.GET,produces= {MediaType.APPLICATION_JSON_VALUE})
	public List<Alien> getDB()
	{
		List<Alien> list=(List<Alien>) repository1.findAll();
		
		return list;
	}
	
	
	
	
}
